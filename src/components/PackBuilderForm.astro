---
---
<section class="container mx-auto px-[20px] py-[60px] flex flex-col gap-[40px]">

    <div class="flex flex-col gap-[16px]">
        <div>
            <label class="block text-md text-[#667085] mb-1">Provide a list of cells</label>
            <textarea
                class="w-full rounded-lg border-[1px] border-[#D0D5DD] shadow-sm px-[14px] py-[10px] text-sm text-[#667085]"
                placeholder="Comma separated list of cell capacities in mAH to be added to the packs"
            />
        </div>
        <div>
            <label class="block text-md text-[#667085] mb-1">Specify pack dimensions</label>
            <div class="flex gap-[8px]">
                <input
                    class="w-full rounded-lg border-[1px] border-[#D0D5DD] shadow-sm px-[14px] py-[10px] text-sm text-[#667085]"
                    id="series" type="number" min="1" placeholder="Series"
                />
                <input
                    class="w-full rounded-lg border-[1px] border-[#D0D5DD] shadow-sm px-[14px] py-[10px] text-sm text-[#667085]"
                    id="parallels" type="number" min="1" placeholder="Parallel"
                />
            </div>
        </div>
        <button
            class="w-full bg-[#2D3B48] text-white rounded-lg px-[14px] py-[10px] text-sm text-center">
            Build Pack
        </button>
        <div  >
            <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-[16px]" id="output">
                
            </div>
            
        </div>
    </div>
</section>
<script>
import {sum, PackBuilder} from "../scripts/PackBuilder"

const input = document.querySelector("textarea");
const button = document.querySelector("button");
const series = document.querySelector("input#series");
const parallel = document.querySelector("input#parallels");
const output = document.getElementById("output");

function renderCell(cell) {
    const template = document.createElement("template");
    template.innerHTML = `
        <div class="w-max rounded-lg border-[1px] border-[#D0D5DD] shadow-sm p-[8px] text-xs text-[#667085]" >
            <span class="block font-bold">${cell} mAh</span>
            <span class="block">Rack 1</span>
        </div>
    `;

    return template.content.cloneNode(true);

}

function renderPack(pack, i) {
    const template = document.createElement("template");
    const capacity = sum(pack);
    
    template.innerHTML = `
        <div class="flex flex-col gap-[24px] border-[1px] border-[#D0D5DD] rounded-lg p-[16px] bg-[#FFF]">
            <div>
                <span class="block text-lg text-[#667085] mb-4 font-bold">PARALLEL PACK ${i+1}</span>
                <span class="block text-md text-[#667085] mb-1">Total Capacity</span>
                <div class="w-full rounded-lg border-[1px] border-[#D0D5DD] shadow-sm px-[12px] py-[8px] text-sm text-[#667085]" >
                    ${capacity} mAh
                </div>
            </div>
            <div>
                <span class="block text-base text-[#667085] mb-1">Cells</span>
                <div class="flex flex-wrap gap-[8px] cells"></div>
            </div>
        </div>
    `;

    pack.forEach(cell => {
        template.content.querySelector(".cells").appendChild(renderCell(cell));
    });

    return template.content.cloneNode(true);
}


button.onclick = () => {
	const batteries = input.value.split(",").map(Number);
	const packs = new PackBuilder(batteries, series.value, parallel.value).build();

    packs.forEach((pack, i) => {
        output.appendChild(renderPack(pack, i));
    })
}

</script>